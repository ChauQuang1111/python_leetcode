# // 3541. Find Most Frequent Vowel and Consonant(13/09/2025)

class Solution:
    def maxFreqSum(self, s: str) -> int:
        # ƒê·∫øm t·∫ßn su·∫•t k√Ω t·ª± b·∫±ng dictionary
        freq = {}
        for c in s:
            freq[c] = freq.get(c, 0) + 1

        vowels = "aeiou"
        max_vowel = 0
        max_consonant = 0

        for ch, count in freq.items():
            if ch in vowels:
                max_vowel = max(max_vowel, count)
            else:
                max_consonant = max(max_consonant, count)

        return max_vowel + max_consonant


# # M√¨nh gi·∫£i th√≠ch chi ti·∫øt thu·∫≠t to√°n c·ªßa h√†m **`maxFreqSum`** trong Python nh√© üëá

# # ---

# # ## üéØ B√†i to√°n

# # * Chu·ªói `s` ch·ªâ ch·ª©a ch·ªØ c√°i th∆∞·ªùng `a-z`.
# # * C·∫ßn t√¨m:

# #   1. Nguy√™n √¢m (`a, e, i, o, u`) c√≥ s·ªë l·∫ßn xu·∫•t hi·ªán nhi·ªÅu nh·∫•t.
#   2. Ph·ª• √¢m (c√°c k√Ω t·ª± c√≤n l·∫°i) c√≥ s·ªë l·∫ßn xu·∫•t hi·ªán nhi·ªÅu nh·∫•t.
# * K·∫øt qu·∫£ = t·ªïng c·ªßa 2 gi√° tr·ªã tr√™n.



## üîé C√°c b∆∞·ªõc thu·∫≠t to√°n

### 1. ƒê·∫øm t·∫ßn su·∫•t xu·∫•t hi·ªán c·ªßa t·ª´ng k√Ω t·ª±

# D√πng dictionary `freq` ƒë·ªÉ l∆∞u s·ªë l·∫ßn xu·∫•t hi·ªán:

# ```python
# freq = {}
# for c in s:
#     freq[c] = freq.get(c, 0) + 1
# ```

# * `freq.get(c, 0)` l·∫•y gi√° tr·ªã hi·ªán t·∫°i c·ªßa `c`, n·∫øu ch∆∞a c√≥ th√¨ m·∫∑c ƒë·ªãnh b·∫±ng 0.
# * Sau v√≤ng l·∫∑p, `freq` ch·ª©a s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa t·∫•t c·∫£ k√Ω t·ª±.

# V√≠ d·ª•:
# `s = "leetcode"` ‚Üí
# `freq = {'l':1, 'e':3, 't':1, 'c':1, 'o':1, 'd':1}`

# ---

# ### 2. X√°c ƒë·ªãnh nguy√™n √¢m nhi·ªÅu nh·∫•t v√† ph·ª• √¢m nhi·ªÅu nh·∫•t

# # Kh·ªüi t·∫°o:

# # ```python
# # max_vowel = 0
# # max_consonant = 0
# # ```

# # Duy·ªát qua t·ª´ng `(ch, count)` trong `freq.items()`:

# # * N·∫øu `ch` l√† nguy√™n √¢m (`ch in "aeiou"`):

# #   ```python
# #   max_vowel = max(max_vowel, count)
# #   ```
# # * Ng∆∞·ª£c l·∫°i l√† ph·ª• √¢m:

# #   ```python
#   max_consonant = max(max_consonant, count)
#   ```

# ---

# ### 3. Tr·∫£ v·ªÅ k·∫øt qu·∫£

# ```python
# return max_vowel + max_consonant
# ```

# ---

# ## ‚úÖ V√≠ d·ª• minh h·ªça

# ### V√≠ d·ª• 1

# `s = "leetcode"`

# * Nguy√™n √¢m:

#   * `'e'` xu·∫•t hi·ªán 3 l·∫ßn
#   * `'o'` xu·∫•t hi·ªán 1 l·∫ßn
#     ‚Üí `max_vowel = 3`
# * Ph·ª• √¢m: `'l','t','c','d'` m·ªói c√°i 1 l·∫ßn ‚Üí `max_consonant = 1`
# * K·∫øt qu·∫£ = 3 + 1 = **4**

# ---

# ### V√≠ d·ª• 2

# `s = "aaaabbbcc"`

# * Nguy√™n √¢m: `'a'` = 4 ‚Üí `max_vowel = 4`
# * Ph·ª• √¢m: `'b'` = 3, `'c'` = 2 ‚Üí `max_consonant = 3`
# * K·∫øt qu·∫£ = 4 + 3 = **7**

# ---

# ## ‚è±Ô∏è ƒê·ªô ph·ª©c t·∫°p

# * **Th·ªùi gian**:

#   * ƒê·∫øm t·∫ßn su·∫•t: O(n), v·ªõi n = ƒë·ªô d√†i chu·ªói.
#   * Duy·ªát qua dictionary: O(k), v·ªõi k ‚â§ 26 (s·ªë k√Ω t·ª± kh√°c nhau).
#   * T·ªïng: O(n).

# * **B·ªô nh·ªõ**: O(26) = O(1).

# ---

# üëâ N√≥i ng·∫Øn g·ªçn:

# * ƒê·∫øm s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa m·ªói ch·ªØ c√°i.
# * L·∫•y nguy√™n √¢m nhi·ªÅu nh·∫•t + ph·ª• √¢m nhi·ªÅu nh·∫•t.
# * Tr·∫£ v·ªÅ t·ªïng.

# ---

# B·∫°n c√≥ mu·ªën m√¨nh minh h·ªça **t·ª´ng b∆∞·ªõc ƒë·∫øm + so s√°nh max** b·∫±ng b·∫£ng chi ti·∫øt (ki·ªÉu step-by-step trace) cho v√≠ d·ª• `"leetcode"` kh√¥ng?













# import java.util.*;

# public class b35 {
#     static Scanner sc = new Scanner(System.in);

#     public static void main(String[] args) {

#         System.out.print("Nh·∫≠p chu·ªói: ");
#         String s = sc.nextLine();

#         int result = maxFreqSum(s);
#         System.out.println("K·∫øt qu·∫£: " + result);

#         sc.close();
#     }

#     public static int maxFreqSum(String s) {
#         // M·∫£ng ƒë·∫øm t·∫ßn su·∫•t c√°c ch·ªØ c√°i a-z
#         int[] cnt = new int[26];
#         for (char c : s.toCharArray()) {
#             cnt[c - 'a']++;
#         }

#         int maxVowel = 0;
#         int maxConsonant = 0;

#         for (int i = 0; i < 26; i++) {
#             char ch = (char) (i + 'a');
#             if (isVowel(ch)) {
#                 // n·∫øu l√† nguy√™n √¢m, c·∫≠p nh·∫≠t t·∫ßn su·∫•t nguy√™n √¢m l·ªõn nh·∫•t
#                 if (cnt[i] > maxVowel) {
#                     maxVowel = cnt[i];
#                 }
#             } else {
#                 // n·∫øu l√† ph·ª• √¢m
#                 if (cnt[i] > maxConsonant) {
#                     maxConsonant = cnt[i];
#                 }
#             }
#         }

#         return maxVowel + maxConsonant;
#     }

#     // H√†m ph·ª• ki·ªÉm tra nguy√™n √¢m
#     public static boolean isVowel(char c) {
#         return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u';
#     }
# }
# // Ok,

# // m√¨nh s·∫Ω
# // gi·∫£i th√≠ch
# // chi ti·∫øt
# // thu·∫≠t to√°n
# // c·ªßa h√†m**`maxFreqSum(String s)`** nh√© üëá

# // ---

# // ## üéØ M·ª•c ti√™u

# // * T√¨m **nguy√™n √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t** trong chu·ªói.
# // * T√¨m **ph·ª• √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t** trong chu·ªói.
# // * Tr·∫£ v·ªÅ **t·ªïng hai gi√° tr·ªã ƒë√≥**.

# // V√≠ d·ª•:

# // * `s = "leetcode"`

# // * Nguy√™n √¢m: `e (3 l·∫ßn)`, `o (1 l·∫ßn)` ‚Üí maxVowel = 3
# // * Ph·ª• √¢m: `l (1)`, `t (1)`, `c (1), d(1)` ‚Üí maxConsonant = 1
# // * K·∫øt qu·∫£ = 3 + 1 = **4**

# // ---

# // ## üîé C√°c b∆∞·ªõc c·ªßa thu·∫≠t to√°n

# // 1. **ƒê·∫øm t·∫ßn su·∫•t xu·∫•t hi·ªán c·ªßa t·ª´ng ch·ªØ c√°i**

# // * T·∫°o m·∫£ng `cnt[26]` ƒë·ªÉ l∆∞u s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa c√°c k√Ω t·ª± `'a'` ‚Üí `'z'`.
# // * Duy·ªát qua chu·ªói `s`, m·ªói khi g·∫∑p k√Ω t·ª± `c`, tƒÉng `cnt[c - 'a']++`.

# // V√≠ d·ª•:
# // `s = "leetcode"` ‚Üí

# // * `'l'` tƒÉng ·ªü `cnt[11]`
# // * `'e'` tƒÉng ·ªü `cnt[4]`
# // * `'t'` tƒÉng ·ªü `cnt[19]`
# // * `'c'` tƒÉng ·ªü `cnt[2]`
# // * `'o'` tƒÉng ·ªü `cnt[14]`
# // * `'d'` tƒÉng ·ªü `cnt[3]`

# // Sau v√≤ng l·∫∑p ‚Üí m·∫£ng `cnt` c√≥ s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa t·ª´ng k√Ω t·ª±.

# // ---

# // 2. **T√¨m t·∫ßn su·∫•t l·ªõn nh·∫•t c·ªßa nguy√™n √¢m v√† ph·ª• √¢m**

# // * Duy·ªát qua `cnt[0..25]`.
# // * V·ªõi m·ªói k√Ω t·ª± `ch = (char)(i + 'a')`:

# // * N·∫øu `ch` ‚àà {`a,e,i,o,u`} ‚Üí c·∫≠p nh·∫≠t `maxVowel = max(maxVowel, cnt[i])`.
# // * Ng∆∞·ª£c l·∫°i ‚Üí c·∫≠p nh·∫≠t `maxConsonant = max(maxConsonant, cnt[i])`.

# // Nh∆∞ v·∫≠y sau v√≤ng l·∫∑p:

# // * `maxVowel` ch·ª©a s·ªë l·∫ßn xu·∫•t hi·ªán **nhi·ªÅu nh·∫•t c·ªßa m·ªôt nguy√™n √¢m**.
# // * `maxConsonant` ch·ª©a s·ªë l·∫ßn xu·∫•t hi·ªán **nhi·ªÅu nh·∫•t c·ªßa m·ªôt ph·ª• √¢m**.

# // 3. **T√≠nh t·ªïng v√† tr·∫£ v·ªÅ k·∫øt qu·∫£**

# // * K·∫øt qu·∫£ = `maxVowel + maxConsonant`.

# // ---

# // ## ‚è±Ô∏è ƒê·ªô ph·ª©c t·∫°p

# // * **Th·ªùi gian**:

# // * Duy·ªát chu·ªói ƒë·ªÉ ƒë·∫øm t·∫ßn su·∫•t ‚Üí O(n), v·ªõi n = ƒë·ªô d√†i chu·ªói.
# // * Duy·ªát 26 ch·ªØ c√°i ƒë·ªÉ t√¨m max ‚Üí O(26) = O(1).
# // * T·ªïng = O(n).

# // * **B·ªô nh·ªõ**: O(26) = O(1).

# // ---

# // üëâ N√≥i ng·∫Øn g·ªçn:

# // * ƒê·∫øm s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa t·ª´ng k√Ω t·ª±.
# // * L·∫•y **nguy√™n √¢m nhi·ªÅu nh·∫•t** + **ph·ª• √¢m nhi·ªÅu nh·∫•t**.
# // * Tr·∫£ v·ªÅ t·ªïng.

# // ---

# // B·∫°n c√≥ mu·ªën m√¨nh minh h·ªça thu·∫≠t to√°n n√†y b·∫±ng **b·∫£ng ƒë·∫øm t·∫ßn su·∫•t tr√™n v√≠ d·ª•
# // c·ª• th·ªÉ** ƒë·ªÉ d·ªÖ h√¨nh dung kh√¥ng?

# // ###

# // Gi·∫£i th√≠ch
# // ƒë·ªÅ b√†i:
# // Find Most
# // Frequent Vowel
# // and Consonant

# // ƒê·ªÅ b√†i**3541.
# // Find Most
# // Frequent Vowel
# // and Consonant**
# // y√™u c·∫ßu
# // b·∫°n t√¨m
# // nguy√™n √¢m
# // v√† ph·ª•
# // √¢m xu·∫•t
# // hi·ªán nhi·ªÅu
# // nh·∫•t trong
# // m·ªôt chu·ªói.

# // B·∫°n ƒë∆∞·ª£c
# // cung c·∫•p
# // m·ªôt chu·ªói`s`
# // ch·ªâ ch·ª©a
# // c√°c ch·ªØ
# // c√°i ti·∫øng

# // Anh (hoa v√† th∆∞·ªùng).

# // #### Y√™u c·∫ßu

# // B·∫°n ph·∫£i tr·∫£ v·ªÅ m·ªôt m·∫£ng ch·ª©a hai ph·∫ßn t·ª≠:
# // 1. K√Ω t·ª± nguy√™n √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t.
# // 2. K√Ω t·ª± ph·ª• √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t.

# // N·∫øu c√≥ nhi·ªÅu h∆°n m·ªôt k√Ω t·ª± c√≥ c√πng t·∫ßn su·∫•t xu·∫•t hi·ªán cao nh·∫•t, b·∫°n c·∫ßn ch·ªçn
# // k√Ω t·ª± c√≥ th·ª© t·ª± b·∫£ng ch·ªØ c√°i nh·ªè nh·∫•t.

# // #### C√°c quy t·∫Øc ch√≠nh

# // 1. **Nguy√™n √¢m (Vowels)**: `'a', 'e', 'i', 'o', 'u'`. ƒê·ªÅ b√†i kh√¥ng n√≥i r√µ,
# // nh∆∞ng m·∫∑c ƒë·ªãnh, b·∫°n c≈©ng c·∫ßn x√©t c√°c ch·ªØ c√°i vi·∫øt hoa t∆∞∆°ng ·ª©ng.
# // 2. **Ph·ª• √¢m (Consonants)**: T·∫•t c·∫£ c√°c ch·ªØ c√°i ti·∫øng Anh kh√°c kh√¥ng ph·∫£i
# // nguy√™n √¢m.
# // 3. **T√≠nh t·∫ßn su·∫•t**: B·∫°n c·∫ßn ƒë·∫øm s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa m·ªói nguy√™n √¢m v√† m·ªói
# // ph·ª• √¢m.
# // 4. **ƒêi·ªÅu ki·ªán tie-breaker (ph√° v·ª° th·∫ø h√≤a)**:
# // * Khi c√≥ nhi·ªÅu nguy√™n √¢m c√≥ c√πng t·∫ßn su·∫•t cao nh·∫•t, b·∫°n ch·ªçn nguy√™n √¢m c√≥ th·ª©
# // t·ª± b·∫£ng ch·ªØ c√°i

# // nh·ªè nh·∫•t (v√≠ d·ª•: `'a'` < `'e'`).
# // * T∆∞∆°ng t·ª±, khi c√≥ nhi·ªÅu ph·ª• √¢m c√≥ c√πng t·∫ßn su·∫•t cao nh·∫•t, b·∫°n ch·ªçn ph·ª• √¢m c√≥
# // th·ª© t·ª± b·∫£ng ch·ªØ c√°i nh·ªè nh·∫•t.

# // #### V√≠ d·ª• minh h·ªça

# // H√£y xem x√©t chu·ªói ƒë·∫ßu v√†o: `"AbcdeFg"`

# // 1. **Ph√¢n lo·∫°i v√† ƒë·∫øm t·∫ßn su·∫•t**:
# // * **Nguy√™n √¢m**:
# // * `'A'` -> 1 l·∫ßn
# // * `'e'` -> 1 l·∫ßn
# // * **Ph·ª• √¢m**:
# // * `'b'` -> 1 l·∫ßn
# // * `'c'` -> 1 l·∫ßn
# // * `'d'` -> 1 l·∫ßn
# // * `'F'` -> 1 l·∫ßn
# // * `'g'` -> 1 l·∫ßn

# // 2. **T√¨m nguy√™n √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t**:
# // * `A` v√† `e` ƒë·ªÅu c√≥ t·∫ßn su·∫•t l√† 1.
# // * √Åp d·ª•ng quy t·∫Øc ph√° v·ª° th·∫ø h√≤a: `A` c√≥ th·ª© t·ª± b·∫£ng ch·ªØ c√°i nh·ªè h∆°n `e`.
# // * Nguy√™n √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t l√† `'A'`.

# // 3. **T√¨m ph·ª• √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t**:
# // * `b`, `c`, `d`, `F`, `g` ƒë·ªÅu c√≥ t·∫ßn su·∫•t l√† 1.
# // * √Åp d·ª•ng quy t·∫Øc ph√° v·ª° th·∫ø h√≤a: `b` c√≥ th·ª© t·ª± b·∫£ng ch·ªØ c√°i nh·ªè nh·∫•t.
# // * Ph·ª• √¢m xu·∫•t hi·ªán nhi·ªÅu nh·∫•t l√† `'b'`.

# // 4. **K·∫øt qu·∫£**:
# // * M·∫£ng k·∫øt qu·∫£ l√†: `['A', 'b']`.

# // ### T√≥m t·∫Øt c√°c b∆∞·ªõc c·∫ßn th·ª±c hi·ªán ƒë·ªÉ gi·∫£i quy·∫øt b√†i to√°n

# // 1. T·∫°o hai danh s√°ch/t·ª´ ƒëi·ªÉn tr·ªëng ƒë·ªÉ l∆∞u t·∫ßn su·∫•t c·ªßa nguy√™n √¢m v√† ph·ª• √¢m.
# // 2. Duy·ªát qua t·ª´ng k√Ω t·ª± trong chu·ªói ƒë·∫ßu v√†o.
# // 3. V·ªõi m·ªói k√Ω t·ª±, x√°c ƒë·ªãnh xem ƒë√≥ l√† nguy√™n √¢m hay ph·ª• √¢m, sau ƒë√≥ tƒÉng b·ªô ƒë·∫øm
# // t·∫ßn su·∫•t t∆∞∆°ng ·ª©ng.
# // 4. Sau khi duy·ªát xong, t√¨m k√Ω t·ª± c√≥ t·∫ßn su·∫•t cao nh·∫•t trong danh s√°ch/t·ª´ ƒëi·ªÉn
# // c·ªßa nguy√™n √¢m.
# // 5. Th·ª±c hi·ªán t∆∞∆°ng t·ª± cho ph·ª• √¢m.
# // 6. X·ª≠ l√Ω tr∆∞·ªùng h·ª£p c√≥ nhi·ªÅu k√Ω t·ª± c√πng t·∫ßn su·∫•t cao nh·∫•t b·∫±ng c√°ch ch·ªçn k√Ω
# // t·ª± c√≥ th·ª© t·ª± b·∫£ng ch·ªØ c√°i nh·ªè nh·∫•t.
# // 7. Tr·∫£ v·ªÅ m·∫£ng k·∫øt qu·∫£.