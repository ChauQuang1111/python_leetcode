# 2125. Number of Laser Beams in a Bank(27/10/2025)
from typing import List

class Solution:
    def numberOfBeams(self, bank: List[str]) -> int:
        ans = 0       # Bi·∫øn l∆∞u t·ªïng s·ªë tia laser trong ng√¢n h√†ng
        prev = 0      # L∆∞u s·ªë l∆∞·ª£ng thi·∫øt b·ªã ('1') ·ªü h√†ng tr∆∞·ªõc c√≥ thi·∫øt b·ªã
        
        # Duy·ªát qua t·ª´ng h√†ng trong ng√¢n h√†ng
        for row in bank:
            cnt = row.count('1')   # ƒê·∫øm s·ªë thi·∫øt b·ªã ('1') trong h√†ng hi·ªán t·∫°i
            
            if cnt > 0:  # N·∫øu h√†ng n√†y c√≥ thi·∫øt b·ªã
                # T√≠nh s·ªë tia laser gi·ªØa h√†ng tr∆∞·ªõc (prev) v√† h√†ng hi·ªán t·∫°i (cnt)
                ans += prev * cnt
                
                # C·∫≠p nh·∫≠t prev cho l·∫ßn l·∫∑p ti·∫øp theo (v√¨ ch·ªâ h√†ng c√≥ thi·∫øt b·ªã m·ªõi t√≠nh)
                prev = cnt
                
        # Tr·∫£ v·ªÅ t·ªïng s·ªë tia laser
        return ans

### üß© **ƒê·ªÅ b√†i**

# M·ªôt **ng√¢n h√†ng** c√≥ h·ªá th·ªëng **b·∫£o m·∫≠t b·∫±ng laser** ƒë∆∞·ª£c bi·ªÉu di·ªÖn d∆∞·ªõi d·∫°ng **m·∫£ng chu·ªói nh·ªã ph√¢n (binary strings)**.

# * M·ªói ph·∫ßn t·ª≠ trong m·∫£ng `bank[i]` l√† **m·ªôt h√†ng (row)** trong t√≤a nh√†.
# * M·ªói k√Ω t·ª± `'1'` trong chu·ªói ƒë·∫°i di·ªán cho **m·ªôt thi·∫øt b·ªã b·∫£o m·∫≠t (security device)**.
# * M·ªói `'0'` l√† **kho·∫£ng tr·ªëng** (kh√¥ng c√≥ thi·∫øt b·ªã).

# ---

# ### üí° **Quy t·∫Øc t·∫°o tia laser**

# * **Tia laser ch·ªâ xu·∫•t hi·ªán gi·ªØa hai h√†ng c√≥ thi·∫øt b·ªã** (t·ª©c l√† 2 h√†ng ƒë·ªÅu c√≥ √≠t nh·∫•t m·ªôt `'1'`).
# * **Tia ch·ªâ ƒëi gi·ªØa c√°c h√†ng kh√¥ng li·ªÅn k·ªÅ c≈©ng ƒë∆∞·ª£c**, **mi·ªÖn l√† h√†ng ·ªü gi·ªØa kh√¥ng c√≥ thi·∫øt b·ªã** (to√†n l√† `'0'`).
# * **S·ªë tia gi·ªØa hai h√†ng** =
#   `(s·ªë thi·∫øt b·ªã ·ªü h√†ng th·ª© nh·∫•t) √ó (s·ªë thi·∫øt b·ªã ·ªü h√†ng th·ª© hai)`

# ---

# ### üéØ **Nhi·ªám v·ª•**

# T√≠nh **t·ªïng s·ªë tia laser** trong ng√¢n h√†ng.

# ---

# ### üßÆ **V√≠ d·ª• minh h·ªça**

# #### V√≠ d·ª• 1:

# ```python
# bank = ["011001", "000000", "010100", "001000"]
# ```

# Bi·ªÉu di·ªÖn:

# ```
# Row 0: 0 1 1 0 0 1  ‚Üí c√≥ 3 thi·∫øt b·ªã
# Row 1: 0 0 0 0 0 0  ‚Üí 0 thi·∫øt b·ªã (b·ªè qua)
# Row 2: 0 1 0 1 0 0  ‚Üí c√≥ 2 thi·∫øt b·ªã
# Row 3: 0 0 1 0 0 0  ‚Üí c√≥ 1 thi·∫øt b·ªã
# ```

# ‚Üí Ch·ªâ t√≠nh **tia gi·ªØa c√°c h√†ng c√≥ thi·∫øt b·ªã**:

# * Gi·ªØa h√†ng 0 (3 thi·∫øt b·ªã) v√† h√†ng 2 (2 thi·∫øt b·ªã):
#   `3 √ó 2 = 6 tia`
# * Gi·ªØa h√†ng 2 (2 thi·∫øt b·ªã) v√† h√†ng 3 (1 thi·∫øt b·ªã):
# #   `2 √ó 1 = 2 tia`

# # ‚úÖ T·ªïng: `6 + 2 = 8`

# **Output:** `8`

# ---

# ### üî¢ **T∆∞ duy thu·∫≠t to√°n**

# 1. ƒê·∫øm s·ªë thi·∫øt b·ªã (`count_1s`) ·ªü m·ªói h√†ng.
# 2. B·ªè qua c√°c h√†ng c√≥ 0 thi·∫øt b·ªã.
# 3. V·ªõi m·ªói c·∫∑p **li·ªÅn k·ªÅ (c√≥ thi·∫øt b·ªã)**, t√≠nh s·ªë tia:
#    `ans += prev_count * curr_count`
# 4. C·∫≠p nh·∫≠t `prev_count = curr_count`.

# ---

# ### üíª **Code m·∫´u (Python)**

# ```python
# class Solution:
#     def numberOfBeams(self, bank: List[str]) -> int:
#         prev = 0
#         ans = 0

#         for row in bank:
#             curr = row.count('1')
#             if curr > 0:
#                 ans += prev * curr
#                 prev = curr

#         return ans
# ```

# ---

# ### ‚öôÔ∏è **Ph√¢n t√≠ch v√≠ d·ª•**

# | H√†ng   | Thi·∫øt b·ªã ('1') | Tia sinh ra | T·ªïng |
# | ------ | -------------- | ----------- | ---- |
# | 011001 | 3              | -           | -    |
# | 000000 | 0              | -           | -    |
# | 010100 | 2              | 3√ó2 = 6     | 6    |
# | 001000 | 1              | 2√ó1 = 2     | 8    |

# ‚úÖ K·∫øt qu·∫£ cu·ªëi: **8**

# ---




### üîç Gi·∫£i th√≠ch thu·∫≠t to√°n:

# 1. **Kh·ªüi t·∫°o:**

#    * `ans = 0`: t·ªïng s·ªë tia laser.
#    * `prev = 0`: s·ªë thi·∫øt b·ªã ·ªü h√†ng tr∆∞·ªõc (n·∫øu h√†ng tr∆∞·ªõc kh√¥ng c√≥ thi·∫øt b·ªã, b·ªè qua).

# 2. **Duy·ªát t·ª´ng h√†ng:**

#    * D√πng `row.count('1')` ƒë·ªÉ ƒë·∫øm s·ªë l∆∞·ª£ng thi·∫øt b·ªã (`cnt`) trong h√†ng ƒë√≥.
#    * N·∫øu h√†ng kh√¥ng c√≥ thi·∫øt b·ªã (`cnt == 0`), b·ªè qua h√†ng ƒë√≥.

# 3. **Khi g·∫∑p h√†ng c√≥ thi·∫øt b·ªã:**

#    * N·∫øu `prev > 0`, nghƒ©a l√† c√≥ m·ªôt h√†ng tr∆∞·ªõc ƒë√≥ c√≥ thi·∫øt b·ªã.
#    * Khi ƒë√≥, **tia laser gi·ªØa hai h√†ng** ƒë∆∞·ª£c t√≠nh b·∫±ng:
#      [
#      prev \times cnt
#      ]
#      v√¨ **m·ªói thi·∫øt b·ªã ·ªü h√†ng tr√™n** s·∫Ω t·∫°o tia laser v·ªõi **m·ªói thi·∫øt b·ªã ·ªü h√†ng d∆∞·ªõi**.

# 4. **C·∫≠p nh·∫≠t `prev`:**

#    * ƒê·∫∑t `prev = cnt` ƒë·ªÉ chu·∫©n b·ªã t√≠nh cho h√†ng c√≥ thi·∫øt b·ªã k·∫ø ti·∫øp.

# 5. **Tr·∫£ k·∫øt qu·∫£ cu·ªëi c√πng:** `ans`.

# ---

# ### üßÆ V√≠ d·ª• minh h·ªça

# ```python
# bank = ["011001", "000000", "010100", "001000"]
# ```

# | H√†ng     | S·ªë thi·∫øt b·ªã (`cnt`) | T√≠nh to√°n                    | `ans` | `prev` |
# | -------- | ------------------- | ---------------------------- | ----- | ------ |
# | "011001" | 3                   | Kh√¥ng c√≥ h√†ng tr∆∞·ªõc ‚áí b·ªè qua | 0     | 3      |
# | "000000" | 0                   | B·ªè qua v√¨ kh√¥ng c√≥ thi·∫øt b·ªã  | 0     | 3      |
# | "010100" | 2                   | +3√ó2 = 6                     | 6     | 2      |
# | "001000" | 1                   | +2√ó1 = 2                     | 8     | 1      |

# ‚úÖ **K·∫øt qu·∫£ cu·ªëi c√πng:** `ans = 8`

# ---

# üëâ T√≥m l·∫°i:
# Thu·∫≠t to√°n ch·ªâ c·∫ßn duy·ªát **m·ªôt l·∫ßn qua m·∫£ng** ‚Üí **O(n)**,
# r·∫•t hi·ªáu qu·∫£ cho b√†i n√†y.
